//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UIWebRole.FileServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StoreFileEntity", ReplyAction="http://tempuri.org/IService/StoreFileEntityResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="IsSuccessful")]
        bool StoreFileEntity(out string ErrorMessage, SharedLib.FileInfo FileInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService/StoreFileEntity", ReplyAction="http://tempuri.org/IService/StoreFileEntityResponse")]
        System.IAsyncResult BeginStoreFileEntity(SharedLib.FileInfo FileInfo, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="IsSuccessful")]
        bool EndStoreFileEntity(out string ErrorMessage, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : UIWebRole.FileServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreFileEntityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public StoreFileEntityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string ErrorMessage {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<UIWebRole.FileServiceReference.IService>, UIWebRole.FileServiceReference.IService {
        
        private BeginOperationDelegate onBeginStoreFileEntityDelegate;
        
        private EndOperationDelegate onEndStoreFileEntityDelegate;
        
        private System.Threading.SendOrPostCallback onStoreFileEntityCompletedDelegate;
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<StoreFileEntityCompletedEventArgs> StoreFileEntityCompleted;
        
        public bool StoreFileEntity(out string ErrorMessage, SharedLib.FileInfo FileInfo) {
            return base.Channel.StoreFileEntity(out ErrorMessage, FileInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStoreFileEntity(SharedLib.FileInfo FileInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStoreFileEntity(FileInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndStoreFileEntity(out string ErrorMessage, System.IAsyncResult result) {
            return base.Channel.EndStoreFileEntity(out ErrorMessage, result);
        }
        
        private System.IAsyncResult OnBeginStoreFileEntity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SharedLib.FileInfo FileInfo = ((SharedLib.FileInfo)(inValues[0]));
            return this.BeginStoreFileEntity(FileInfo, callback, asyncState);
        }
        
        private object[] OnEndStoreFileEntity(System.IAsyncResult result) {
            string ErrorMessage = this.GetDefaultValueForInitialization<string>();
            bool retVal = this.EndStoreFileEntity(out ErrorMessage, result);
            return new object[] {
                    ErrorMessage,
                    retVal};
        }
        
        private void OnStoreFileEntityCompleted(object state) {
            if ((this.StoreFileEntityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StoreFileEntityCompleted(this, new StoreFileEntityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StoreFileEntityAsync(SharedLib.FileInfo FileInfo) {
            this.StoreFileEntityAsync(FileInfo, null);
        }
        
        public void StoreFileEntityAsync(SharedLib.FileInfo FileInfo, object userState) {
            if ((this.onBeginStoreFileEntityDelegate == null)) {
                this.onBeginStoreFileEntityDelegate = new BeginOperationDelegate(this.OnBeginStoreFileEntity);
            }
            if ((this.onEndStoreFileEntityDelegate == null)) {
                this.onEndStoreFileEntityDelegate = new EndOperationDelegate(this.OnEndStoreFileEntity);
            }
            if ((this.onStoreFileEntityCompletedDelegate == null)) {
                this.onStoreFileEntityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStoreFileEntityCompleted);
            }
            base.InvokeAsync(this.onBeginStoreFileEntityDelegate, new object[] {
                        FileInfo}, this.onEndStoreFileEntityDelegate, this.onStoreFileEntityCompletedDelegate, userState);
        }
    }
}
